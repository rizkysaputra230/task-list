import React, { useState } from 'react';

export const InputText = (props = {}) => {
  const {
    isDisabled,
    useButton,
    fieldName,
    type = 'text',
    htmlFor,
    label,
    placeholder,
    togglePassword,
    registerUseForm,
    className,
    rules = {},
    ...rest
  } = props

  const [isPasswordVisible, setIsPasswordVisible] = useState(false);

  const togglePasswordVisibility = () => {
    setIsPasswordVisible(!isPasswordVisible);
  }

  return (
    <>
      <div>
        <label
          htmlFor={htmlFor}
          className="block text-medium font-normal leading-6 text-label"
        >
          {label}
          <div className='relative mt-1'>
            <input
              id={fieldName}
              name={fieldName}
              className={`w-full rounded-xl px-4 py-3 shadow-sm bg-transparent border-2 ring-0 outline-none focus:ring-0 border-[#D8D8D8] placeholder:!text-[#90909090] ${className ? className : ''}`}
              type={type === 'password' ? (isPasswordVisible ? 'text' : 'password') : type}
              placeholder={placeholder}
              disabled={isDisabled}
              autoComplete='off'
              {...(registerUseForm
                ? {
                  ...registerUseForm(fieldName, rules),
                }
                : {})}
              {...rest}
            />
            {togglePassword ? <button
              className="absolute bottom-0 text-[1.25rem] right-2 top-[8px] h-[34px] w-[24px] flex items-center justify-center text-[#463557] opacity-[.5]"
              type="button"
              onClick={togglePasswordVisibility}
            >
              {isPasswordVisible ? (
                <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path d="M12 5.25C4.5 5.25 1.5 12 1.5 12C1.5 12 4.5 18.75 12 18.75C19.5 18.75 22.5 12 22.5 12C22.5 12 19.5 5.25 12 5.25ZM12 15.75C11.2583 15.75 10.5333 15.5301 9.91661 15.118C9.29993 14.706 8.81928 14.1203 8.53545 13.4351C8.25162 12.7498 8.17736 11.9958 8.32205 11.2684C8.46675 10.541 8.8239 9.8728 9.34835 9.34835C9.8728 8.8239 10.541 8.46675 11.2684 8.32205C11.9958 8.17736 12.7498 8.25162 13.4351 8.53545C14.1203 8.81928 14.706 9.29993 15.118 9.91661C15.5301 10.5333 15.75 11.2583 15.75 12C15.75 12.9946 15.3549 13.9484 14.6517 14.6517C13.9484 15.3549 12.9946 15.75 12 15.75Z" fill="#7DA1FF" />
                  <path fillRule="evenodd" clipRule="evenodd" d="M3.40717 8.09467C5.19504 6.3068 8.00057 4.5 12 4.5C15.9994 4.5 18.805 6.3068 20.5928 8.09467C21.4846 8.98644 22.1276 9.87691 22.5487 10.5457C22.7597 10.8807 22.916 11.1618 23.0208 11.362C23.0733 11.4621 23.113 11.5422 23.1402 11.5988C23.1539 11.6272 23.1644 11.6497 23.1719 11.6659C23.1757 11.674 23.1787 11.6805 23.1809 11.6855L23.1837 11.6917L23.1847 11.6938L23.185 11.6947C23.1852 11.6951 23.1854 11.6954 22.5 12C23.1854 12.3046 23.1852 12.3049 23.185 12.3053L23.1847 12.3062L23.1837 12.3083L23.1809 12.3145C23.1787 12.3195 23.1757 12.326 23.1719 12.3341C23.1644 12.3503 23.1539 12.3728 23.1402 12.4012C23.113 12.4578 23.0733 12.5379 23.0208 12.638C22.916 12.8382 22.7597 13.1193 22.5487 13.4543C22.1276 14.1231 21.4846 15.0136 20.5928 15.9053C18.805 17.6932 15.9994 19.5 12 19.5C8.00057 19.5 5.19504 17.6932 3.40717 15.9053C2.5154 15.0136 1.87235 14.1231 1.45126 13.4543C1.24035 13.1193 1.08405 12.8382 0.979181 12.638C0.92672 12.5379 0.887047 12.4578 0.859771 12.4012C0.846131 12.3728 0.835583 12.3503 0.82808 12.3341C0.824328 12.326 0.821336 12.3195 0.819098 12.3145L0.816307 12.3083L0.815334 12.3062L0.814952 12.3053C0.814791 12.3049 0.814641 12.3046 1.5 12C0.814641 11.6954 0.814791 11.6951 0.814952 11.6947L0.815334 11.6938L0.816307 11.6917L0.819098 11.6855C0.821336 11.6805 0.824328 11.674 0.82808 11.6659C0.835583 11.6497 0.846131 11.6272 0.859771 11.5988C0.887047 11.5422 0.92672 11.4621 0.979181 11.362C1.08405 11.1618 1.24035 10.8807 1.45126 10.5457C1.87235 9.87691 2.5154 8.98644 3.40717 8.09467ZM1.5 12L0.814641 11.6954C0.728453 11.8893 0.728453 12.1107 0.814641 12.3046L1.5 12ZM2.33859 12C2.42682 12.1653 2.55353 12.3897 2.72061 12.6551C3.0964 13.2519 3.6721 14.0489 4.46783 14.8447C6.05496 16.4318 8.49943 18 12 18C15.5006 18 17.945 16.4318 19.5322 14.8447C20.3279 14.0489 20.9036 13.2519 21.2794 12.6551C21.4465 12.3897 21.5732 12.1653 21.6614 12C21.5732 11.8347 21.4465 11.6103 21.2794 11.3449C20.9036 10.7481 20.3279 9.95106 19.5322 9.15533C17.945 7.5682 15.5006 6 12 6C8.49943 6 6.05496 7.5682 4.46783 9.15533C3.6721 9.95106 3.0964 10.7481 2.72061 11.3449C2.55353 11.6103 2.42682 11.8347 2.33859 12ZM22.5 12L23.1854 12.3046C23.2715 12.1107 23.2715 11.8893 23.1854 11.6954L22.5 12Z" fill="#2E5DD6" />
                  <path fillRule="evenodd" clipRule="evenodd" d="M12 9C10.3431 9 9 10.3431 9 12C9 13.6569 10.3431 15 12 15C13.6569 15 15 13.6569 15 12C15 10.3431 13.6569 9 12 9ZM7.5 12C7.5 9.51472 9.51472 7.5 12 7.5C14.4853 7.5 16.5 9.51472 16.5 12C16.5 14.4853 14.4853 16.5 12 16.5C9.51472 16.5 7.5 14.4853 7.5 12Z" fill="#2E5DD6" />
                </svg>
              ) : (
                <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path d="M5.05499 3.24563C4.98913 3.17138 4.90918 3.11095 4.81979 3.06783C4.7304 3.02471 4.63334 2.99976 4.53423 2.99443C4.43513 2.9891 4.33595 3.00349 4.24245 3.03677C4.14895 3.07005 4.06298 3.12156 3.98953 3.18831C3.91608 3.25506 3.85661 3.33572 3.81457 3.42562C3.77252 3.51552 3.74874 3.61288 3.7446 3.71204C3.74045 3.8112 3.75603 3.9102 3.79043 4.00329C3.82483 4.09639 3.87737 4.18173 3.94499 4.25438L5.74874 6.23906C2.34374 8.32875 0.879366 11.55 0.814679 11.6963C0.772035 11.7922 0.75 11.896 0.75 12.0009C0.75 12.1059 0.772035 12.2097 0.814679 12.3056C0.847491 12.3797 1.64155 14.1403 3.40687 15.9056C5.75905 18.2569 8.72999 19.5 12 19.5C13.6806 19.5096 15.3442 19.1636 16.8816 18.4847L18.9441 20.7544C19.0099 20.8286 19.0899 20.8891 19.1793 20.9322C19.2686 20.9753 19.3657 21.0002 19.4648 21.0056C19.5639 21.0109 19.6631 20.9965 19.7566 20.9632C19.8501 20.93 19.9361 20.8784 20.0095 20.8117C20.083 20.7449 20.1424 20.6643 20.1845 20.5744C20.2265 20.4845 20.2503 20.3871 20.2544 20.288C20.2586 20.1888 20.243 20.0898 20.2086 19.9967C20.1742 19.9036 20.1217 19.8183 20.0541 19.7456L5.05499 3.24563ZM13.3987 14.6541C12.8105 14.9636 12.136 15.0689 11.4814 14.9535C10.8268 14.8382 10.229 14.5087 9.78189 14.0168C9.33481 13.5248 9.06377 12.8984 9.01134 12.2357C8.9589 11.573 9.12803 10.9117 9.49218 10.3556L13.3987 14.6541ZM23.1853 12.3056C23.1459 12.3938 22.1962 14.4966 20.0578 16.4119C19.9104 16.5441 19.7167 16.6127 19.519 16.6027C19.3212 16.5927 19.1354 16.5049 19.0022 16.3584L9.50624 5.91281C9.4154 5.81313 9.35312 5.69079 9.32596 5.55869C9.29879 5.42659 9.30776 5.2896 9.3519 5.16216C9.39604 5.03473 9.47373 4.92155 9.57679 4.83455C9.67984 4.74755 9.80445 4.68995 9.93749 4.66781C10.6192 4.55525 11.309 4.49912 12 4.5C15.27 4.5 18.2409 5.74313 20.5931 8.09531C22.3584 9.86063 23.1525 11.6222 23.1853 11.6963C23.2279 11.7922 23.25 11.896 23.25 12.0009C23.25 12.1059 23.2279 12.2097 23.1853 12.3056Z" fill="black" />
                </svg>
              )}
            </button>
              : null
            }
          </div>
        </label>
      </div>
    </>
  )
}

export default React.memo(InputText)